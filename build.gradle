apply plugin: 'java'
apply plugin: 'war'

version = '1.0'

repositories {
    mavenLocal()
    mavenCentral()
}

subprojects {
    apply plugin: 'java'

    repositories {
        maven {
            url 'https://repo.spring.io/libs-release'
        }
        mavenCentral()
    }

    ext {
        seleniumVersion = '2.47.1'
        restAssuredVersion = '2.5.0'
        fluentleniumVersion = '0.10.3'
        mockserverVersion = '3.9.17'
        springVersion = '4.1.0.RELEASE'
        slf4jVersion = '1.7.7'

        springCompile = { module ->
            compile("org.springframework:$module:$springVersion") {
                exclude group: 'commons-logging'
            }
            compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        }
        springCompile.delegate = project.dependencies
    }

    dependencies {
        testCompile(
            "org.springframework:spring-test:$springVersion",
            'junit:junit:4.11',
            'org.hamcrest:hamcrest-library:1.3',
            'org.mockito:mockito-core:1.9.5',

            'com.codeborne:phantomjsdriver:1.2.1',

            "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
            "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion",
            "org.seleniumhq.selenium:selenium-server:$seleniumVersion",

            "org.fluentlenium:fluentlenium-core:$fluentleniumVersion",
            "org.fluentlenium:fluentlenium-assertj:$fluentleniumVersion",

            "com.jayway.restassured:rest-assured:$restAssuredVersion",
            "com.jayway.restassured:json-schema-validator:$restAssuredVersion",

            "org.mock-server:mockserver-integration-testing:$mockserverVersion",
            "org.mock-server:mockserver:$mockserverVersion",
            "org.mock-server:mockserver-netty:$mockserverVersion",
            "org.mock-server:mockserver-core:$mockserverVersion",
        )

        testRuntime(
            'ch.qos.logback:logback-classic:1.1.2',
        )
    }

    configurations {
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-chrome-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-edge-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-htmlunit-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-firefox-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-ie-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-safari-driver'
    }
}

task acceptanceTest(type: Test) {
    dependsOn(
        ':applications/core:build',
        ':applications/core:war',
        ':applications/core:acceptanceTomcatRunWar'
    )
}

defaultTasks 'clean', 'assemble', 'unitTest', 'war'