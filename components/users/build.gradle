buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'be.filipblondeel.gradle:gradle-gulp-plugin:0.1'
    }
}

plugins {
    id 'com.moowork.node' version '0.10'
}
apply plugin: 'com.moowork.node'

node {
    version = '0.12.7'
    npmVersion = '3.3.3'
    download = true
}

dependencies {
    ext {
        seleniumVersion = '2.47.1'
        restAssuredVersion = '2.5.0'
        fluentleniumVersion = '0.10.3'
    }

    compile(
        "org.slf4j:slf4j-api:$slf4jVersion",
        'javax.servlet:javax.servlet-api:3.1.0',
        'javax.servlet.jsp:javax.servlet.jsp-api:2.3.2-b01',
        'com.fasterxml.jackson.core:jackson-databind:2.6.1'
    )

    springCompile('spring-context')
    springCompile('spring-core')
    springCompile('spring-webmvc')

    testCompile (
        'com.codeborne:phantomjsdriver:1.2.1',

        "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
        "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion",

        "org.fluentlenium:fluentlenium-core:$fluentleniumVersion",
        "org.fluentlenium:fluentlenium-assertj:$fluentleniumVersion",
    )

    configurations {
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-chrome-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-edge-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-htmlunit-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-firefox-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-ie-driver'
        testCompile.exclude group: 'org.seleniumhq.selenium', module: 'selenium-safari-driver'
    }
}

task acceptanceTest(type: Test) {
    include 'acceptance/**'
    exclude 'unit/**'

    def fixtures = files("${projectDir}/src/test/java/acceptance/fixtures/")
    classpath += fixtures
}

task unitTest(type: Test) {
    include 'unit/**'
    exclude 'acceptance/**'
}

task npmBuild(dependsOn: npmInstall, type: NpmTask) {
    inputs.file 'gulpfile.js'
    args = ['run', 'gulp']
}


assemble.dependsOn npmBuild
